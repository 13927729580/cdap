/**
 * Executes a passed in command and waits for it's completion.
 */
def executeCommand(command) {
  def runnableCommand = command.join(' ')
  def proc = runnableCommand.execute();
  proc.waitFor()
  //proc.exitValue()
  0
}

/**
 * Task for running jshint over developer and cloud code base. 
 */
task jshint << {
  def developer = [
    "./tools/jshint/bin/hint",
    "./client/core/models/", 
    "./client/core/views/", 
    "./client/core/controllers/", 
    "./client/core/", 
    "./client/developer/patch/views",
    "./server/developer/main.js", 
    "--config", 'jshint.json'
  ]

  if(executeCommand(developer) != 0) {
    throw new GradleScriptException("JSHint reported errors while building developer app", null)
  }

  def cloud = [
    "./tools/jshint/bin/hint",
    "./client/core/models/", 
    "./client/core/views/", 
    "./client/core/controllers/", 
    "./client/core/", 
    "./client/cloud/patch/views",
    "./server/cloud/main.js", 
    "--config", 'jshint.json'
  ]
  if(executeCommand(cloud) != 0) {
    throw new GradleScriptException("JSHint reported errors while building cloud app", null)
  }
}

/**
 * Builds an edition
 */
def build_edition(edition) {
  def installDir = "$buildDir/$edition"

  mkdir(installDir)
  mkdir("$installDir/client")

  def rcmd = [
    "node",
    "$projectDir/tools/requirejs/bin/r.js",
    "-o", "$projectDir/app.build.js",
    "baseUrl=$projectDir/client/${edition}",
    "out=$installDir/client/main.js"
  ]
  
  if(executeCommand(rcmd) != 0) {
    throw new GradleScriptException("Failed while running r.js for edition '${edition}'", null)
  }

  copy {
    from 'client/core/lib'
    into "$installDir/client/core/lib"
  }

  copy {
    from 'client/assets'
    into "$installDir/client/assets"
  }

  copy {
    from "client/${edition}/patch/assets"
    into "$installDir/client/patch/assets"
  }

  copy {
    from "client/$edition/index.html"
    if(edition == 'cloud') {
      from "client/$edition/access-error.html"
      from "client/$edition/internal-error.html"
    }
    into "$installDir/client/"
  }

  copy {
    from "server/common"
    into "$installDir/common"
  }

  copy {
    from "server/${edition}"
    into "$installDir/server"
    include('bin/*', 'package.json', 'node_modules/**/*', 'thrift_bindings/**/*', 'continuuity-local.xml', 'main.js')
    if(edition == 'cloud') {
      include 'env.js'
    }
  }

}

task cloud(dependsOn: 'jshint') {
  build_edition('cloud')
}

task developer(dependsOn: 'jshint') {
  build_edition('developer')
}

task build(dependsOn: [ 'cloud', 'developer' ]) { }
