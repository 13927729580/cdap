import com.continuuity.gradle.GitRepo;

apply plugin: 'continuuity'

task gitCheckout {
    group = 'Git'
    description = 'Checkout the specified branch.'
    doLast {
        for (g in gitRepos) {
            g.checkout();
        }
    }
}

task gitPullSelf(type:Exec) {
    group = 'Git'
    description = 'Intended for master project only, runs a git pull on .'
    workingDir projectDir
    commandLine 'git'
    args 'pull'
}

task gitPull(dependsOn: gitPullSelf)  {
    group = 'Git'
    description = 'Pulls the latest commits for all git repos.'
    doLast {
        for (g in gitRepos) {
            g.pull();
        }
    }
}

task gitUpdate(dependsOn: gitPullSelf)  {
    group = 'Git'
    description = 'Performs a clone, checkout, and pull on all repositories.'
    doLast {
        for (g in gitRepos) {
            g.load();
            g.checkout();
            g.pull();
        }
    }
}

task gitStatus  {
    group = 'Git'
    description = 'Checks the status of all git repos'
    doLast {
        for (g in gitRepos) {
            g.status();
        }
    }
}


task javadoc(type: Javadoc) {
    group = 'Documentation' 
    description = 'Aggregates javadocs for all projects.'
    source subprojects.collect { project ->
        project.sourceSets.main.allJava
    }
    destinationDir = new File(buildDir, 'javadoc')
    // Might need a classpath
    classpath = files(subprojects.collect { project ->
        project.sourceSets.main.compileClasspath
    })
}

subprojects {
    task syncGradles {
        group = 'Continuuity'
        description = 'Synchronizes changes to coninuuity.gradle across all sub repositories.'
        doLast {
            copy {
                from "$rootDir/buildSrc/src/main/resources/com/continuuity/gradle/continuuity.gradle"
                into projectDir
            }
        }
    }

    if(!Boolean.valueOf(failfast))
    {	
    	test {
       	    ignoreFailures = true
  	}
    }
}




