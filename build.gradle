apply plugin: 'continuuity'

// Declare the git repos that will comprise the master build.
def gitRepos = []
import com.continuuity.gradle.GitRepo;
gitRepos << new GitRepo(name: "common");
gitRepos << new GitRepo(name: "data-fabric");
gitRepos << new GitRepo(name: "flow");

defaultTasks 'gitClone', 'build'

task gitClone  {
    description = 'Clones the continuuity git repos required for a product release build'
    // Flags the task as up-to-date if all the directories have already been cloned.
    for (g in gitRepos) {
        outputs.dir g.directory;
    }
    doLast {
        for (g in gitRepos) {
            g.load();
        }
    }
}

task gitPull << {
    description = 'Pulls the latest commits for all git repos.'
    for (g in gitRepos) {
        g.pull();
    }
}

task gitStatus << {
    descriptions = 'Checks the status of all git repos'
    for (g in gitRepos) {
        g.status();
    }
}

subprojects {
    task sync << {
        description = 'Synchronizes files that must exsist in each repo.'
        copy {
            from "$rootDir/buildSrc/src/main/resources/com/continuuity/gradle/continuuity.gradle"
            into projectDir
        }
    }
}




