subprojects {
  /**
   * Prepackager stages the project files into a directory that is then 
   * picked up by FPM packager to create debian or rpm packages. The 
   * staging is important as we would like to have all the necessary 
   * primary and tertiary dependencies to be pulled in. 
   */
  task prepackager {
    def stageDir = file("$buildDir/stage-packaging")
    def installDir = file("$stageDir/opt/continuuity/$project.name")

    doLast {
      copy {
        from 'bin'
        into "${installDir}/bin"
      }

      copy {
        from 'conf'
        into "${installDir}/conf"
      }

      copy {
        from configurations.runtime
        into "${installDir}/lib"
      }
    }
  }

  /**
   * Applies FPM packager to create debian or rpm packages. 
   */
  apply plugin: 'fpm-packaging'

  /**
   * Generates debian package. 
   */
  packaging {
    baseDir = "$project.buildDir/stage-packaging"
    extraOptions = [
                     '--name': "continuuity-${project.name}", 
                     '--vendor': 'Continuuity Inc.', 
                     '--maintainer': 'support@continuuity.com',
                     '--license': 'Copyright 2012-2013 Continuuity,Inc. All Rights Reserved.',
                     '--architecture': 'all'
    ]
  }

  // Make the dependency on prepackager.
  debian.dependsOn prepackager

  // clean up any staged files.
  debian.doLast {
    delete("$buildDir/stage-packaging")
  }
}
