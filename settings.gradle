/// This file is also imported by the continuuity plugin
/// to obtain the repository list.
import com.continuuity.gradle.GitRepo;

GitRepo.baseDir=rootProject.projectDir;

// Declare the git repos that will comprise the master build.
ext.gitRepos = []
gitRepos << new GitRepo(name: "gateway", branch: "gradle-refactoring" );
gitRepos << new GitRepo(name: "common", branch: "gradle-refactoring" );
gitRepos << new GitRepo(name: "data-fabric", branch: "gradle-refactoring" );
gitRepos << new GitRepo(name: "flow", branch: "gradle-refactoring" );
gitRepos << new GitRepo(name: "overlord", branch: "gradle-refactoring" );
gitRepos << new GitRepo(name: "web-cloud-app", branch: "gradle-refactoring" );
gitRepos << new GitRepo(name: "examples", branch: "gradle-refactoring" );
gitRepos << new GitRepo(name: "singlenode", branch: "gradle-refactoring" );
gitRepos << new GitRepo(name: "performance", branch: "gradle-refactoring" );

gradle.ext.gitRepos = gitRepos
/// Adds separate git repo based subprojects.
for (g in gitRepos) {
    g.load();
	try {
        settings.include(g.getDirectory())
    }
    catch (MissingPropertyException e)
    {
        // This is expected when imported from the continuuity plugin.
    }
}

project(':singlenode').buildFileName = 'package.gradle'

/// Adds subprojects included in the master repository.
try {
    settings.include('distributions')
    settings.include('test')
}
catch (MissingPropertyException e)
{
    // This is expected when imported from the continuuity plugin.
}

